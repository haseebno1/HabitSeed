name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Show Node and NPM versions
      run: |
        node --version
        npm --version
    
    - name: Install dependencies
      run: |
        npm clean-install || npm install
    
    - name: Verify Capacitor dependencies
      run: |
        echo "Checking Capacitor dependencies..."
        npm list @capacitor/core @capacitor/cli @capacitor/android || true
        
        # Install missing capacitor dependencies if needed
        if ! npm list @capacitor/core | grep -q "@capacitor/core"; then
          echo "Installing @capacitor/core..."
          npm install @capacitor/core
        fi
        
        if ! npm list @capacitor/cli | grep -q "@capacitor/cli"; then
          echo "Installing @capacitor/cli..."
          npm install @capacitor/cli
        fi
        
        if ! npm list @capacitor/android | grep -q "@capacitor/android"; then
          echo "Installing @capacitor/android..."
          npm install @capacitor/android
        fi
    
    - name: List installed packages
      run: npm list --depth=0
    
    - name: Clean build directory
      run: |
        rm -rf dist
        rm -rf android
    
    - name: Build web app
      run: |
        echo "Starting build process..."
        npm run build
      env:
        CI: false
    
    - name: Upload web build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: web-dist
        path: dist/
        retention-days: 7

  build-android:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install
    
    - name: Verify Capacitor dependencies
      run: |
        echo "Checking Capacitor dependencies..."
        npm list @capacitor/core @capacitor/cli @capacitor/android || true
        
        # Install missing capacitor dependencies if needed
        if ! npm list @capacitor/core | grep -q "@capacitor/core"; then
          echo "Installing @capacitor/core..."
          npm install @capacitor/core
        fi
        
        if ! npm list @capacitor/cli | grep -q "@capacitor/cli"; then
          echo "Installing @capacitor/cli..."
          npm install @capacitor/cli
        fi
        
        if ! npm list @capacitor/android | grep -q "@capacitor/android"; then
          echo "Installing @capacitor/android..."
          npm install @capacitor/android
        fi
    
    - name: Download web build
      uses: actions/download-artifact@v4
      with:
        name: web-dist
        path: dist
    
    - name: List downloaded build files
      run: ls -la dist
    
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'gradle'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
    
    - name: Add and sync Android platform
      run: |
        # Remove Android directory if it exists
        if [ -d "android" ]; then
          echo "Removing existing Android directory"
          rm -rf android
        fi
        
        # Add Android platform
        npx cap add android
        
        # Create basic capacitor config if needed
        if [ ! -f "capacitor.config.ts" ] && [ ! -f "capacitor.config.js" ] && [ ! -f "capacitor.config.json" ]; then
          echo "Creating basic capacitor.config.json"
          echo '{
            "appId": "com.habitseed.app",
            "appName": "HabitSeed",
            "webDir": "dist",
            "bundledWebRuntime": false
          }' > capacitor.config.json
        fi
        
        # Sync with the web build
        npx cap sync android
      env:
        CI: false
    
    - name: Debug Android Gradle setup
      run: |
        echo "Android directory contents:"
        ls -la android
        
        echo "Gradle version:"
        if [ -f "android/gradlew" ]; then
          cd android && ./gradlew --version
        fi
        
        echo "Android app build.gradle:"
        cat android/app/build.gradle || echo "build.gradle not found"
        
        echo "Android project gradle.properties:"
        cat android/gradle.properties || echo "gradle.properties not found"
    
    - name: Set gradlew permissions
      run: |
        if [ -f "android/gradlew" ]; then
          chmod +x android/gradlew
          echo "Set execute permission on gradlew"
        else
          echo "gradlew file not found, cannot proceed"
          exit 1
        fi
    
    - name: Update Gradle wrapper if needed
      run: |
        if [ -d "android" ]; then
          cd android
          
          # Check the current Gradle wrapper version
          WRAPPER_PROPERTIES="gradle/wrapper/gradle-wrapper.properties"
          if [ -f "$WRAPPER_PROPERTIES" ]; then
            echo "Current Gradle wrapper configuration:"
            cat "$WRAPPER_PROPERTIES"
            
            # Check if we need to update the distributionUrl
            if grep -q "MaxPermSize" "$WRAPPER_PROPERTIES"; then
              echo "Updating Gradle wrapper distributionUrl..."
              sed -i 's|distributionUrl=.*|distributionUrl=https\\://services.gradle.org/distributions/gradle-8.0-bin.zip|g' "$WRAPPER_PROPERTIES"
              echo "Updated to:"
              cat "$WRAPPER_PROPERTIES"
            fi
          else
            echo "Gradle wrapper properties file not found"
          fi
        else
          echo "Android directory not found"
        fi
    
    - name: Configure Gradle for CI environment
      run: |
        if [ -f "android/gradle.properties" ]; then
          # Remove any existing JVM args line to avoid appending to it
          sed -i '/org.gradle.jvmargs/d' android/gradle.properties
          
          # Add updated JVM args without MaxPermSize (which is obsolete in Java 8+)
          echo "org.gradle.jvmargs=-Xmx2g -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8" >> android/gradle.properties
          echo "org.gradle.daemon=false" >> android/gradle.properties
          echo "org.gradle.parallel=true" >> android/gradle.properties
          echo "android.enableJetifier=true" >> android/gradle.properties
          echo "android.useAndroidX=true" >> android/gradle.properties
        fi
    
    - name: Update Android app build.gradle for CI
      run: |
        if [ -f "android/app/build.gradle" ]; then
          # Add multiDexEnabled true to fix the mergeExtDexDebug issue
          sed -i '/defaultConfig {/a \\        multiDexEnabled true' android/app/build.gradle
          
          # Add multidex dependency
          sed -i '/dependencies {/a \\    implementation "androidx.multidex:multidex:2.0.1"' android/app/build.gradle
          
          echo "Updated app/build.gradle:"
          cat android/app/build.gradle
        fi
    
    - name: Configure MultiDex support
      run: |
        mkdir -p android/app/src/main/java/com/habitseed/app
        
        # Create the Application class file
        cat << 'EOF' > android/app/src/main/java/com/habitseed/app/MainApplication.java
package com.habitseed.app;

import android.app.Application;
import androidx.multidex.MultiDexApplication;

public class MainApplication extends MultiDexApplication {
    @Override
    public void onCreate() {
        super.onCreate();
    }
}
EOF
        
        # Update AndroidManifest.xml if it exists
        if [ -f "android/app/src/main/AndroidManifest.xml" ]; then
          # Add the application name attribute
          sed -i 's/<application /<application android:name="com.habitseed.app.MainApplication" /g' android/app/src/main/AndroidManifest.xml
          echo "Updated AndroidManifest.xml"
        fi
    
    - name: Build Android app
      run: |
        if [ -d "android" ]; then
          cd android
          
          # Create a local properties file with SDK location
          echo "sdk.dir=/opt/hostedtoolcache/Android/sdk" > local.properties
          
          # Use a more conservative build command without problematic JVM options
          # Disable daemon, reduce memory requirements, enable stacktraces for debugging
          ./gradlew --no-daemon \
            -Dorg.gradle.jvmargs="-Xmx2g -Dfile.encoding=UTF-8" \
            --stacktrace \
            --warning-mode all \
            assembleDebug
          
          BUILD_RESULT=$?
          
          # If build failed, display the problems report if available
          if [ $BUILD_RESULT -ne 0 ]; then
            echo "Build failed. Checking for problems report..."
            REPORT_DIR="build/reports/problems"
            if [ -d "$REPORT_DIR" ]; then
              echo "Problems report directory found. Contents:"
              ls -la "$REPORT_DIR"
              if [ -f "$REPORT_DIR/problems-report.html" ]; then
                echo "Problems report content (first 200 lines):"
                head -n 200 "$REPORT_DIR/problems-report.html"
              fi
            fi
            
            # Also check app directory reports
            APP_REPORT_DIR="app/build/reports/problems"
            if [ -d "$APP_REPORT_DIR" ]; then
              echo "App problems report directory found. Contents:"
              ls -la "$APP_REPORT_DIR"
              if [ -f "$APP_REPORT_DIR/problems-report.html" ]; then
                echo "App problems report content (first 200 lines):"
                head -n 200 "$APP_REPORT_DIR/problems-report.html"
              fi
            fi
            
            exit $BUILD_RESULT
          fi
        else
          echo "Android directory not found, cannot build"
          exit 1
        fi
    
    - name: Upload Android APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug
        path: android/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 7
